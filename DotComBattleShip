import java.io.*;
import java.util.*;

class DotComBust {

    private GameHelper helper = new GameHelper();
    private ArrayList<DotCom> dotComsList = new ArrayList<DotCom>();
    private int numOfGuesses = 0;

private void setUpGame() {
    //first make some dot comes and give them locations
    DotCom one = new DotCom();
    one.setName("Pets.com");
    DotCom two = new DotCom();
    two.setName("eToys.com");
    DotCom three = new DotCom();
    three.setName("Go2.com");
    dotComsList.add(one);
    dotComsList.add(two);
    dotComsList.add(three);

    System.out.println("Your goal is to sink three dot comes.");
    System.out.println("Pets.com, eToys.com, Go2.com");
    System.out.println("Try to sink them all in the fewest number of guesses");
    System.out.println("They are hidden on a grid. For your guess, use A-G and 1-49 as your grid.");
    System.out.println("Example guess: A12. Now... BEGIN!");

     for (DotCom dotComToSet : dotComsList) { //repeats through each DotCom in the list

         ArrayList<String> newLocation = helper.placeDotCom(3); //asks the helper for a DotCom Location (an Array list of strings)

         dotComToSet.setLocationCells(newLocation); //Call setter meathod to give the locations the helper created
     } //close for loop
  }//close setUpGame meathod

private void startPlaying() {

    while(!dotComsList.isEmpty()) { //as long as the DotCom list is NOT empty

        String userGuess = helper.getUserInput("Enter a guess: "); //Get the user's guess
        checkUserGuess(userGuess); //Call checkUserGuess method

    } //close while loop

    finishGame(); //all is done! call finishGame method
}//close startPlaying method

private void checkUserGuess (String userGuess) {

    numOfGuesses++;
    String result = "miss";

    for (int x = 0; x < dotComsList.size(); x++) { //repeat with ALL DotComes in the list
        result = dotComsList.get(x).checkYourself(userGuess);

        if (result.equals("kill")) {

            dotComsList.remove(x);
            break;
        }
    }//close for loop

  System.out.println(result); //print the result for the user
} //close checkUserGuess

private void finishGame() { //when the game has finished, do these things
    System.out.println("All Dot Coms are dead! your stock is now worthless.");
    if (numOfGuesses <= 18) {
        System.out.println ("It only took you " + numOfGuesses + " guesses.");
        System.out.println(" You got out before your options sank.");
    } else {
        System.out.println("Took you long enough. " + numOfGuesses + " guesses.");
        System.out.println("Fish are dancing with your options");
    }//close if/else statement
  }//close finishGame method

public static void main (String[] args) {
    DotComBust game = new DotComBust();
    game.setUpGame();
    game.startPlaying();
}//close Main method

}//Close DotComBust Class

class DotCom {
    private ArrayList<String> locationCells;
    private String name;

    public void setLocationCells (ArrayList<String> loc) {
        locationCells = loc;
    }//close setLocationCells method

    public void setName(String n) {
        name = n;
    }// close setName method

    public String checkYourself (String userInput) {
        String result = "miss";
        int index = locationCells.indexOf(userInput);
        if (index >= 0) {
            locationCells.remove(index);

            if (locationCells.isEmpty()) {
                result = "kill";
                System.out.println("Ouch! You sunk " + name + "  : ( ");
            } else {
                result = "hit";
            } //close if
        } // close if

        return result;
    } //close checkYourself method
}//close DotCom class

class GameHelper { //"ready-baked" code from head-first author

    private static final String alphabet = "abcdefg";
    private int gridLength = 7;
    private int gridSize = 49;
    private int [] grid = new int[gridSize];
    private int comCount = 0;

    public String getUserInput(String prompt) {
        String inputLine = null;
        System.out.print(prompt + " ");

        try {
            BufferedReader is = new BufferedReader(new InputStreamReader (System.in));
            inputLine = is.readLine();
            if (inputLine.length () == 0) return null;
        } catch (IOException e) {
            System.out.println("IOException: " + e);
        }//end try/catch
        return inputLine.toLowerCase();
    }//close getUserInput

    public ArrayList<String> placeDotCom(int comSize) {
        ArrayList<String> alphaCells = new ArrayList<String>();

        String temp = null;
        int [] coords = new int[comSize];
        int attempts = 0;
        boolean success = false;
        int location = 0;

        comCount++;
        int incr = 1;
        if ((comCount % 2) == 1) {
            incr = gridLength;
        }//close if

        while (!success & attempts++ < 200) {
            location = (int) (Math.random() * gridSize);
            //System.out.print(" try " + location);
            int x = 0;
              success = true;
              while (success && x < comSize) {
                  if (grid[location] == 0) {
                      coords [x++] = location;
                      location += incr;
                      if (location >= gridSize) {
                          success = false;
                      }//close if
                      if (x>0 && (location % gridLength == 0)) {
                          success = false;
                      }//close if
                  } else {
                      //System.out.print(" used " + location);
                      success = false;
                  }//close if/else
              }// close while
        }//close while

     int x = 0;
     int row = 0;
     int column = 0;
     //System.out.println("\n");
     while (x < comSize) {
         grid[coords[x]] = 1;
         row = (int) (coords[x] / gridLength);
         column = coords[x] % gridLength;
         temp = String.valueOf(alphabet.charAt(column));

         alphaCells.add(temp.concat(Integer.toString(row)));
         x++;
         //System.out.print(" coord "+x+" = " + alphaCells.get(x-1));
     }//close while loop

     //System.out.println("\n");

     return alphaCells;
    }// close ArrayList placeDotCom
}// close GameHelper Class
